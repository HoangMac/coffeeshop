package com.assessment.coffeeshop.config;

import java.net.URI;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.context.annotation.Profile;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedTimestampRecordExtension;
import software.amazon.awssdk.enhanced.dynamodb.extensions.VersionedRecordExtension;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.dynamodb.DynamoDbClient;

@Configuration
@Profile({"local"})
public class LocalDynamoConfiguration {

  @Value("${cloud.aws.sqs.endpoint}")
  private String endpoint;

  @Value("${cloud.aws.credentials.access-key:test}")
  private String accessKey;

  @Value("${cloud.aws.credentials.secret-key:test}")
  private String secretKey;

  @Value("${cloud.aws.sqs.region}")
  private String region;

  @Bean
  public DynamoDbClient dynamoDbClient() {
    return DynamoDbClient.builder()
        .endpointOverride(URI.create(endpoint))
        .region(Region.of(region))
        .credentialsProvider(StaticCredentialsProvider.create(
            AwsBasicCredentials.create(accessKey, secretKey)))
        .build();
  }


  @Bean
  public DynamoDbEnhancedClient getDynamoDbEnhancedClient() {
    var versionedRecordExtension = VersionedRecordExtension.builder().build();
    var autoGeneratedTimestampRecordExtension = AutoGeneratedTimestampRecordExtension.builder().build();
    return DynamoDbEnhancedClient.builder()
        .dynamoDbClient(dynamoDbClient())
        .extensions(versionedRecordExtension, autoGeneratedTimestampRecordExtension)
        .build();
  }
}
